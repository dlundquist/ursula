[DEFAULT]
debug = False
verbose = True

use_syslog = True
syslog_log_facility = LOG_LOCAL0

multi_host=True
send_arp_for_ha=true

enabled_apis = ec2,osapi_compute,metadata,openstack_compute_api_v2

scheduler_default_filters=AvailabilityZoneFilter,RamFilter,ComputeFilter
cpu_allocation_ratio={{ nova.cpu_allocation_ratio }}
ram_allocation_ratio={{ nova.ram_allocation_ratio }}

# Services offered #
s3_host={{ endpoints.keystone }}
ec2_host={{ endpoints.keystone }}
ec2_dmz_host={{ endpoints.keystone }}
ec2_url=http://{{ endpoints.nova }}:8773/services/Cloud
cc_host={{ endpoints.keystone }}
nova_url=http://{{ endpoints.nova }}:8774/v1.1/

# MySQL Connection #
sql_connection=mysql://nova:{{ secrets.db_password }}@{{ endpoints.db }}/nova?charset=utf8

# Logging #
logdir=/var/log/nova
log_config=/etc/nova/logging.conf

# Paths to important items #
state_path=/var/lib/nova
lock_path=/var/lib/nova
rootwrap_config=/etc/nova/rootwrap.conf
api_paste_config=/etc/nova/api-paste.ini
keys_path=/var/lib/nova/keys

# Auth
use_deprecated_auth=false
auth_strategy=keystone
keystone_ec2_url=http://{{ endpoints.keystone }}:5000/v2.0/ec2tokens

# Imaging service
glance_api_servers=http://{{ endpoints.glance }}:9292
image_service=nova.image.glance.GlanceImageService

# Vnc configuration
novnc_enabled=false
novncproxy_base_url=http://{{ endpoints.vnc }}:6080/vnc_auto.html
novncproxy_port=6080
vncserver_proxyclient_address={{ primary_ip }}
vncserver_listen=0.0.0.0

{% macro memcached_hosts() -%}
{% for host in groups['controller'] -%}
   {% if loop.last -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ memcached.port }}
   {%- else -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ memcached.port }},
   {%- endif -%}
{% endfor -%}
{% endmacro -%}

# Consoleauth tokens in memcached
memcached_servers={{ memcached_hosts() }}

# Networking #
network_api_class=nova.network.quantumv2.api.API
quantum_url=https://{{ endpoints.neutron }}:9797
quantum_auth_strategy=keystone
quantum_admin_tenant_name=service
quantum_admin_username=neutron
quantum_admin_password={{ secrets.service_password }}
quantum_admin_auth_url=http://{{ endpoints.keystone }}:35357/v2.0
libvirt_vif_driver=nova.virt.libvirt.vif.LibvirtHybridOVSBridgeDriver
linuxnet_interface_driver=nova.network.linux_net.LinuxOVSInterfaceDriver

security_group_api=quantum
firewall_driver=nova.virt.firewall.NoopFirewallDriver

service_quantum_metadata_proxy=true
quantum_metadata_proxy_shared_secret={{ secrets.metadata_proxy_shared_secret }}

dhcpbridge_flagfile = /etc/nova/nova.conf
dhcpbridge=/usr/local/bin/nova-dhcpbridge

# Workers #
osapi_compute_workers={{ nova.api_workers }}
metadata_workers={{ nova.metadata_api_workers }}

# Cinder #
volume_api_class=nova.volume.cinder.API
osapi_volume_listen_port=5900

{% macro rabbitmq_hosts() -%}
{% for host in groups['controller'] -%}
   {% if loop.last -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ rabbitmq.port }}
   {%- else -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ rabbitmq.port }},
   {%- endif -%}
{% endfor -%}
{% endmacro -%}

# Rabbit #
{% if rabbitmq.cluster -%}
rabbit_hosts={{ rabbitmq_hosts() }}
{% else -%}
rabbit_host={{ endpoints.rabbit }}
rabbit_port=5672
{% endif -%}
rabbit_userid={{ rabbitmq.user }}
rabbit_password={{ secrets.rabbit_password }}

# Virt driver
max_cores=20
libvirt_type={{ nova.libvirt_type }}
compute_driver={{ nova.compute_driver }}
libvirt_use_virtio_for_bridges=true
resume_guests_state_on_host_boot=true

[conductor]
use_local = True
